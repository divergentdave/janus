[workspace]
members = [
    "aggregator",
    "build_script_utils",
    "client",
    "collector",
    "core",
    "integration_tests",
    "interop_binaries",
    "messages",
]
resolver = "2"

[workspace.package]
edition = "2021"
homepage = "https://divviup.org"
license = "MPL-2.0"
repository = "https://github.com/divviup/janus"
rust-version = "1.65.0"
version = "0.3.0"

[workspace.dependencies]
janus_aggregator = { version = "0.3", path = "aggregator" }
janus_build_script_utils = { version = "0.3", path = "build_script_utils" }
janus_client = { version = "0.3", path = "client" }
janus_collector = { version = "0.3", path = "collector" }
janus_core = { version = "0.3", path = "core" }
janus_integration_tests = { version = "0.3", path = "integration_tests" }
janus_interop_binaries = { version = "0.3", path = "interop_binaries" }
janus_messages = { version = "0.3", path = "messages" }
k8s-openapi = { version = "0.17.0", features = ["v1_24"] }  # keep this version in sync with what is referenced by the indirect dependency via `kube`
kube = { version = "0.78.0", git = "https://github.com/divergentdave/kube", branch = "rustls-0.21-alpha", default-features = false, features = ["client", "rustls-tls"] }

[profile.dev]
# Disabling debug info improves build speeds & reduces build artifact sizes, which helps CI caching.
debug = 0

[profile.small]
# We define a profile intended to minimize the eventual binary size, while still allowing for
# relatively fast compilation. It is intended for use in size-constrained testing scenarios, e.g.
# building a binary artifact that ends up embedded in another binary.
inherits = "dev"
opt-level = "z"   # Optimize for size.
debug = false     # Do not generate debug info.
strip = true      # Strip symbols from binary.
